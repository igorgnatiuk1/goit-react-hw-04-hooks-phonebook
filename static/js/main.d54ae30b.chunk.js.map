{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChahge","event","currentTarget","value","preventDefault","className","styles","form","label","input","onChange","type","pattern","title","required","button","ContactList","contacts","onDelete","list","map","id","item","onClick","Filter","Section","children","section","allContacts","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","some","contact","alert","v4","prevState","contactId","prevContacts","normalizedFilter","toLowerCase","includes","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d54ae30b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__256l2\",\"label\":\"ContactForm_label__1HM9e\",\"input\":\"ContactForm_input__19SBS\",\"button\":\"ContactForm_button__1atxR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__267fa\",\"item\":\"ContactList_item__16hKm\",\"button\":\"ContactList_button__1q1GV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1u-_X\",\"label\":\"Filter_label__e4lha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2qg7S\"};","import {useState} from \"react\";\r\nimport styles from './ContactForm.module.css'\r\n\r\n\r\n\r\nfunction ContactForm ({onSubmit}) {\r\n\r\nconst [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n\r\n    const handleInputChahge = event =>{\r\n        const {name, value} = event.currentTarget\r\n        switch (name) {\r\n            case 'name' :\r\n                setName(value);\r\n                break;\r\n            case 'number' :\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        onSubmit(name, number)\r\n        setName ('')\r\n        setNumber ('')\r\n    }\r\n\r\n\r\n        return (\r\n\r\n            <form onSubmit={handleSubmit} className={styles.form}>\r\n                <label className={styles.label}> Name\r\n                    <input className={styles.input}\r\n                           onChange={handleInputChahge}\r\n                           value={name}\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                           required\r\n                    />\r\n                </label>\r\n                <label className={styles.label}> Number\r\n                    <input className={styles.input}\r\n                           onChange={handleInputChahge}\r\n                           value={number}\r\n                           type=\"tel\"\r\n                           name=\"number\"\r\n                           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                           title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                           required\r\n                    />\r\n                </label>\r\n                <button type=\"Submit\" className={styles.button}>Add</button>\r\n\r\n            </form>\r\n        )\r\n\r\n}\r\nexport default ContactForm","import PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\n\r\n\r\nconst ContactList = ({contacts, onDelete }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({ id, name, number}) => (\r\n                <li key={id} className={styles.item}>\r\n                    {name}: {number}\r\n                    <button onClick={() => onDelete(id)} type=\"button\" className={styles.button}>DELETE</button>\r\n\r\n                </li>\r\n\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label className={styles.label}>\r\n        <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n    </label>\r\n)\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter","import PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\nconst Section = ({children}) => (\r\n    <section className={styles.section}> {children}\r\n    </section>\r\n)\r\nSection.propTypes = {children: PropTypes.node,\r\n};\r\nexport default Section","import {useState, useEffect} from \"react\";\nimport { v4 } from 'uuid';\nimport './App.css';\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport Section from \"./components/Section\";\n\nconst allContacts = [\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n  {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n  {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n]\n\nfunction App () {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? allContacts});\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (name, number) => {\n    const isInContacts = contacts.some(contact => contact.name === name)\n    if (isInContacts) { alert(`${name} is already in contacts.`); return }\n\n    if (name && number) {\n      const contact = {\n        id: v4(),\n        name,\n        number,\n      };\n      setContacts(prevState => [contact, ...prevState]);\n    }\n  };\n\n  const deleteContact = (contactId => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId))\n  });\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value)\n  }\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const resultedVisibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter),);\n    return resultedVisibleContacts;\n  }\n\n    return (\n        <Section>\n\n\n          <h1>Phonebook</h1>\n          <ContactForm  onSubmit = {formSubmitHandler}/>\n\n          <h2>Contacts</h2>\n          <h2>Find contacts by name</h2>\n\n          <Filter value={filter} onChange={changeFilter} />\n\n          <ContactList  onDelete ={deleteContact} contacts={filteredContacts()}/>\n\n\n        </Section>\n    )\n  }\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}